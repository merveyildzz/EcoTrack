# Generated by Django 4.2.24 on 2025-09-05 08:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("icon", models.CharField(blank=True, max_length=50)),
                (
                    "criteria_type",
                    models.CharField(
                        choices=[
                            ("activity_count", "Activity Count"),
                            ("co2_reduction", "CO2 Reduction"),
                            ("streak_days", "Daily Streak"),
                            ("challenge_completion", "Challenge Completion"),
                            ("social_engagement", "Social Engagement"),
                        ],
                        max_length=30,
                    ),
                ),
                ("criteria_value", models.FloatField()),
                (
                    "criteria_period",
                    models.CharField(
                        choices=[
                            ("all_time", "All Time"),
                            ("monthly", "Monthly"),
                            ("weekly", "Weekly"),
                            ("daily", "Daily"),
                        ],
                        default="all_time",
                        max_length=20,
                    ),
                ),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("uncommon", "Uncommon"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                        ],
                        default="common",
                        max_length=20,
                    ),
                ),
                ("points", models.IntegerField(default=10)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["rarity", "name"],
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("icon", models.CharField(blank=True, max_length=50)),
                (
                    "challenge_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual"),
                            ("team", "Team"),
                            ("community", "Community"),
                        ],
                        default="individual",
                        max_length=30,
                    ),
                ),
                (
                    "goal_type",
                    models.CharField(
                        choices=[
                            ("activity_count", "Activity Count"),
                            ("co2_reduction", "CO2 Reduction"),
                            ("streak_days", "Daily Streak"),
                            ("category_focus", "Category Focus"),
                        ],
                        max_length=30,
                    ),
                ),
                ("goal_value", models.FloatField()),
                ("goal_unit", models.CharField(default="count", max_length=20)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("reward_points", models.IntegerField(default=0)),
                ("max_participants", models.IntegerField(blank=True, null=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_challenges_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reward_badge",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="social.badge",
                    ),
                ),
            ],
            options={
                "ordering": ["-is_featured", "-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "leaderboard_type",
                    models.CharField(
                        choices=[
                            ("global", "Global"),
                            ("friends", "Friends"),
                            ("challenge", "Challenge-based"),
                            ("category", "Category-based"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("total_co2_saved", "Total CO2 Saved"),
                            ("activity_count", "Activity Count"),
                            ("streak_days", "Streak Days"),
                            ("badge_points", "Badge Points"),
                            ("challenge_completions", "Challenge Completions"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "time_period",
                    models.CharField(
                        choices=[
                            ("all_time", "All Time"),
                            ("yearly", "Yearly"),
                            ("monthly", "Monthly"),
                            ("weekly", "Weekly"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                ("max_entries", models.IntegerField(default=100)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-is_featured", "name"],
            },
        ),
        migrations.CreateModel(
            name="UserStats",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("total_activities", models.IntegerField(default=0)),
                ("total_co2_saved", models.FloatField(default=0.0)),
                ("current_streak", models.IntegerField(default=0)),
                ("longest_streak", models.IntegerField(default=0)),
                ("total_badge_points", models.IntegerField(default=0)),
                ("challenges_completed", models.IntegerField(default=0)),
                ("badges_earned", models.IntegerField(default=0)),
                ("weekly_co2_saved", models.FloatField(default=0.0)),
                ("monthly_co2_saved", models.FloatField(default=0.0)),
                ("yearly_co2_saved", models.FloatField(default=0.0)),
                ("last_activity_date", models.DateTimeField(blank=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_stats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SocialFeed",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("badge_earned", "Badge Earned"),
                            ("challenge_completed", "Challenge Completed"),
                            ("leaderboard_rank", "Leaderboard Achievement"),
                            ("milestone_reached", "Milestone Reached"),
                            ("streak_achievement", "Streak Achievement"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("is_public", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feed_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                ("progress_value", models.FloatField(default=0.0)),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="social.badge"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-earned_at"],
                "unique_together": {("user", "badge")},
            },
        ),
        migrations.CreateModel(
            name="LeaderboardEntry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rank", models.IntegerField()),
                ("score", models.FloatField()),
                ("previous_rank", models.IntegerField(blank=True, null=True)),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "leaderboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="social.leaderboard",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["leaderboard", "rank"],
                "unique_together": {("leaderboard", "user", "period_start")},
            },
        ),
        migrations.CreateModel(
            name="ChallengeParticipation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("current_progress", models.FloatField(default=0.0)),
                ("progress_percentage", models.FloatField(default=0.0)),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="social.challenge",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_challenge_participations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-joined_at"],
                "unique_together": {("user", "challenge")},
            },
        ),
    ]
