# Generated by Django 4.2.24 on 2025-09-04 21:36

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("activities", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CalculationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("activity_id", models.UUIDField()),
                ("input_data", models.JSONField()),
                ("output_data", models.JSONField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                            ("fallback", "Fallback Used"),
                        ],
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("processing_time_ms", models.IntegerField(blank=True, null=True)),
                ("calculation_version", models.CharField(default="1.0", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "calculation_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CarbonBudget",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "budget_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "target_co2_kg",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "current_co2_kg",
                    models.DecimalField(decimal_places=3, default=0, max_digits=10),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "carbon_budgets",
            },
        ),
        migrations.CreateModel(
            name="UnitConversion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_unit", models.CharField(max_length=20)),
                ("to_unit", models.CharField(max_length=20)),
                ("category", models.CharField(max_length=20)),
                (
                    "conversion_factor",
                    models.DecimalField(decimal_places=6, max_digits=15),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "unit_conversions",
                "indexes": [
                    models.Index(
                        fields=["from_unit", "category"],
                        name="unit_conver_from_un_d5293c_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="unit_conver_is_acti_c36435_idx"
                    ),
                ],
                "unique_together": {("from_unit", "to_unit", "category")},
            },
        ),
        migrations.CreateModel(
            name="EmissionFactor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("transportation", "Transportation"),
                            ("energy", "Energy"),
                            ("food", "Food"),
                            ("consumption", "Consumption"),
                            ("waste", "Waste"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subcategory", models.CharField(max_length=100)),
                ("activity_type", models.CharField(max_length=100)),
                ("unit", models.CharField(max_length=20)),
                (
                    "factor_value",
                    models.DecimalField(
                        decimal_places=6,
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("scope_1", "Scope 1 - Direct"),
                            ("scope_2", "Scope 2 - Indirect Energy"),
                            ("scope_3", "Scope 3 - Other Indirect"),
                        ],
                        default="scope_3",
                        max_length=10,
                    ),
                ),
                ("source", models.CharField(max_length=200)),
                ("source_url", models.URLField(blank=True)),
                ("region", models.CharField(default="global", max_length=50)),
                ("year", models.IntegerField()),
                ("version", models.CharField(default="1.0", max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "confidence_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "emission_factors",
                "ordering": ["-year", "-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["category", "subcategory", "activity_type"],
                        name="emission_fa_categor_6f9e19_idx",
                    ),
                    models.Index(
                        fields=["is_active", "year"],
                        name="emission_fa_is_acti_e32f88_idx",
                    ),
                    models.Index(
                        fields=["region"], name="emission_fa_region_6948bf_idx"
                    ),
                ],
                "unique_together": {
                    (
                        "category",
                        "subcategory",
                        "activity_type",
                        "unit",
                        "region",
                        "version",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="CarbonCalculation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("input_value", models.DecimalField(decimal_places=3, max_digits=10)),
                ("input_unit", models.CharField(max_length=20)),
                (
                    "normalized_value",
                    models.DecimalField(decimal_places=3, max_digits=10),
                ),
                ("normalized_unit", models.CharField(max_length=20)),
                ("co2_kg", models.DecimalField(decimal_places=3, max_digits=10)),
                (
                    "calculation_method",
                    models.CharField(default="direct_multiplication", max_length=50),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.5"), max_digits=3
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "activity",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calculation",
                        to="activities.activity",
                    ),
                ),
                (
                    "emission_factor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calculations",
                        to="carbon.emissionfactor",
                    ),
                ),
            ],
            options={
                "db_table": "carbon_calculations",
            },
        ),
    ]
